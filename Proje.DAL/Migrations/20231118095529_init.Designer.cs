// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proje.DAL.Context;

#nullable disable

namespace Proje.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231118095529_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Proje.CORE.Entities.Film", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<string>("Dil")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<double>("Sure")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Filmler");
                });

            modelBuilder.Entity("Proje.CORE.Entities.FilmlerKategoriler", b =>
                {
                    b.Property<int>("KategoriID")
                        .HasColumnType("int");

                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.HasKey("KategoriID", "FilmID");

                    b.HasIndex("FilmID");

                    b.ToTable("FilmlerKategoriler");
                });

            modelBuilder.Entity("Proje.CORE.Entities.FilmlerOyuncular", b =>
                {
                    b.Property<int>("OyuncuID")
                        .HasColumnType("int");

                    b.Property<int>("FilmID")
                        .HasColumnType("int");

                    b.HasKey("OyuncuID", "FilmID");

                    b.HasIndex("FilmID");

                    b.ToTable("FilmlerOyuncular");
                });

            modelBuilder.Entity("Proje.CORE.Entities.Kategori", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("Proje.CORE.Entities.Oyuncu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("bit");

                    b.Property<int>("Cinsiyet")
                        .HasColumnType("int");

                    b.Property<DateTime>("DogumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SilinmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Oyuncular");
                });

            modelBuilder.Entity("Proje.CORE.Entities.FilmlerKategoriler", b =>
                {
                    b.HasOne("Proje.CORE.Entities.Film", "Film")
                        .WithMany("FilmlerKategoriler")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.CORE.Entities.Kategori", "Kategori")
                        .WithMany("FilmlerKategoriler")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Proje.CORE.Entities.FilmlerOyuncular", b =>
                {
                    b.HasOne("Proje.CORE.Entities.Film", "Film")
                        .WithMany("FilmlerOyuncular")
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proje.CORE.Entities.Oyuncu", "Oyuncu")
                        .WithMany("FilmlerOyuncular")
                        .HasForeignKey("OyuncuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Oyuncu");
                });

            modelBuilder.Entity("Proje.CORE.Entities.Film", b =>
                {
                    b.Navigation("FilmlerKategoriler");

                    b.Navigation("FilmlerOyuncular");
                });

            modelBuilder.Entity("Proje.CORE.Entities.Kategori", b =>
                {
                    b.Navigation("FilmlerKategoriler");
                });

            modelBuilder.Entity("Proje.CORE.Entities.Oyuncu", b =>
                {
                    b.Navigation("FilmlerOyuncular");
                });
#pragma warning restore 612, 618
        }
    }
}
